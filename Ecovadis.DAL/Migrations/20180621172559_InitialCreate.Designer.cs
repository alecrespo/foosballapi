// <auto-generated />
using System;
using Ecovadis.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecovadis.DAL.Migrations
{
    [DbContext(typeof(EcovadisContext))]
    [Migration("20180621172559_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecovadis.DAL.Models.Court", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("Guid");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Court");
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PeriodId");

                    b.Property<int>("Player");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourtId");

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool>("IsFinished");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartTime");

                    b.Property<bool>("WasOneSided");

                    b.Property<int>("Winner");

                    b.HasKey("Id");

                    b.HasIndex("CourtId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool>("IsFinished");

                    b.Property<int>("MatchId");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("Winner");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("Period");
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Goal", b =>
                {
                    b.HasOne("Ecovadis.DAL.Models.Period", "Period")
                        .WithMany("Goals")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Match", b =>
                {
                    b.HasOne("Ecovadis.DAL.Models.Court", "Court")
                        .WithMany("Matches")
                        .HasForeignKey("CourtId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ecovadis.DAL.Models.Period", b =>
                {
                    b.HasOne("Ecovadis.DAL.Models.Match", "Match")
                        .WithMany("Periods")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
